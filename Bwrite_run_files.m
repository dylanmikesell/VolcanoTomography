clear all
close all
clc

%
% write pronto?.run files for tomographic inversion of surface wave data
%

% for all frequencies considered - here .1:.01:.7
for fcmp = 1:81
    
    % write a run file for that frequency
    
    fidt = fopen( sprintf( 'runFiles/pronto%d.run', fcmp ), 'w' );
    
    fprintf( fidt, '%3.2f,\n',...
        str2double( readParam('dxz') )...
        ); % dxz
    fprintf( fidt, '%i,\n',...
        str2double( readParam('iop_grid') )...
        ); % iop_grid
    fprintf( fidt, '%i,%i,%i,%i,\n',...
        [...
        str2double( readParam('xmin') )...
        str2double( readParam('xmax') )...
        str2double( readParam('zmin') )...
        str2double( readParam('zmax') )...
        ]); % xmin,xmax,zmin,zmax
    fprintf( fidt, '%4.3f,%4.2f,\n',...
        [...
        str2double( readParam('tmin') )...
        str2double( readParam('tmax') )...
        ]); % tmin,tmax
    fprintf( fidt, '%4.3f,%4.3f,\n',...
        [...
        str2double( readParam('vmin') )...
        str2double( readParam('vmax') )...
        ]); % vmin,vmax
    fprintf( fidt, '%2.1f,\n',...
        str2double( readParam('mu0') )...
        ); % mu0
    fprintf( fidt, '%2.1f,%2.1f,%2.1f,%2.1f,\n',...
        [...
        str2double( readParam('mu1_h') )...
        str2double( readParam('mu1_v') )...
        str2double( readParam('mu1_d') )...
        str2double( readParam('theta1') )...
        ] ); % mu1_h,mu1_v,mu1_d,theta1
    fprintf( fidt, '%2.1f,%2.1f,%2.1f,%2.1f,%2.1f,\n',...
        [...
        str2double( readParam('mu2_h') )...
        str2double( readParam('mu2_v') )...
        str2double( readParam('mu2_d') )...
        str2double( readParam('theta2') )...
        str2double( readParam('mu2_m') )...
        ] ); % mu2_h,mu2_v,mu2_d,theta2,mu2_m
    fprintf( fidt, '%2.1f,%2.1f,%2.1f,\n',...
        [...
        str2double( readParam('xwidth') )...
        str2double( readParam('zwidth') )...
        str2double( readParam('cwait') )...
        ] ); % xwidth,zwidth,cwait
    fprintf( fidt, '%i,\n',...
        str2double( readParam('iop_in') )...
        ); % iop_vin
    fprintf( fidt, '%2.1f,%2.1f,%10.5f,%2.1f,%2.1f,\n',...
        [...
        str2double( readParam('xo_in') )...
        str2double( readParam('zo_in') )...
        str2double( readParam('vo_in') )...
        str2double( readParam('a_in') )...
        str2double( readParam('phi_in') )...
        ] ); % xo_in,zo_in,vo_in,a_in,phi_in
    fprintf( fidt, '%i,\n',...
        str2double( readParam('iop_vref') )...
        ); %  iop_vref
    fprintf( fidt, '%2.1f,%2.1f,%10.5f,%2.1f,%2.1f,\n',...
        [...
        str2double( readParam('xo_ref') )...
        str2double( readParam('zo_ref') )...
        str2double( readParam('vo_ref') )...
        str2double( readParam('a_ref') )...
        str2double( readParam('phi_ref') )...
        ] ); % xo_ref,zo_ref,vo_ref,a_ref,phi_ref
    fprintf( fidt, '%i,%i,%i,%i,\n',...
        [...
        str2double( readParam('iop_topo') )...
        str2double( readParam('z_topo') )...
        str2double( readParam('v_reduce') )...
        str2double( readParam('airspeed') )...
        ] ); % iop_topo,z_topo,v_reduce,airspeed
    fprintf( fidt, '%i,\n',...
        str2double( readParam('iop_tout') )...
        ); % iop_tout
    fprintf( fidt, '%6.4f,%6.4f,\n',...
        [...
        str2double( readParam('errlim') )...
        str2double( readParam('tcutoff') )...
        ] ); % errlim,tcutoff
    fprintf( fidt, '%i,%i,\n',...
        [...
        str2double( readParam('niter') )...
        str2double( readParam('itmax') )...
        ] ); %  niter,itmax
    
    fclose( fidt);
    
end

%--------------------------------------------------------------------------
% Notes from Matt Haney's original version
%--------------------------------------------------------------------------

% 2500 in the above is the homogeneous background model of 2500 m/s
% you will probably want to eventually change that to be equal to the
% average of the surface wave speeds at that frequency from the data,
% or better yet the surface wave speed for an initial layered model at
% that frequency

% format of the above input .run file is described in pronto.help and
% pronto_help.run

% these are the relative weights given to zeroth (rp1), first (rp2), and
% second (rp3) derivative regularizers.
% where these are denoted mu1, mu2, and mu3 respectively
% rp1 = 2.0;
% rp2 = 3.0;
% rp3 = 8.0;